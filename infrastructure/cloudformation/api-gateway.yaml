AWSTemplateFormatVersion: '2010-09-09'
Description: 'ContribConnect - API Gateway HTTP API'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Environment name

Resources:
  # HTTP API
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub 'cc-api-${Environment}'
      Description: ContribConnect API Gateway
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - '*'
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowHeaders:
          - Content-Type
          - X-Api-Key
          - Authorization
        MaxAge: 300

  # Lambda Integration for Agent
  AgentIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cc-agent-proxy-${Environment}'
      PayloadFormatVersion: '2.0'
      TimeoutInMillis: 29000

  # Route for Agent Chat
  AgentRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: 'POST /api/agent/chat'
      Target: !Sub 'integrations/${AgentIntegration}'

  # Default Stage
  DefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: '$default'
      AutoDeploy: true
      DefaultRouteSettings:
        ThrottlingBurstLimit: 1000
        ThrottlingRateLimit: 500
      AccessLogSettings:
        DestinationArn: !GetAtt ApiLogGroup.Arn
        Format: '$context.requestId $context.error.message $context.error.messageString $context.integration.error $context.integration.integrationStatus $context.integration.latency $context.integration.requestId $context.integration.status $context.stage $context.requestTime'

  # CloudWatch Log Group for API Gateway
  ApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/apigateway/cc-api-${Environment}'
      RetentionInDays: 7

  # Lambda Permission for API Gateway
  AgentLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'cc-agent-proxy-${Environment}'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*'

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !GetAtt HttpApi.ApiEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-ApiEndpoint'
  
  ApiId:
    Description: API Gateway ID
    Value: !Ref HttpApi
    Export:
      Name: !Sub '${AWS::StackName}-ApiId'
  
  AgentChatUrl:
    Description: Full URL for agent chat endpoint
    Value: !Sub '${HttpApi.ApiEndpoint}/api/agent/chat'
    Export:
      Name: !Sub '${AWS::StackName}-AgentChatUrl'
